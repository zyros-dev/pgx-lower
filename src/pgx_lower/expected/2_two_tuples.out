LOAD 'pgx_lower.so';
NOTICE:  Installing custom executor hook...
NOTICE:  Registering custom sigsegv handler!
SELECT 'hello';
NOTICE:  Custom executor is being executed in C! Ahah!
NOTICE:  Calling C++ executor from C...
NOTICE:  Successfully created MLIR context!
NOTICE:  LLVM version: 20.1.2
NOTICE:  Inside C++ executor! Plan type: 1
NOTICE:  Query text: SELECT 'hello';
NOTICE:  Only simple table scans (SeqScan) are supported in raw mode.
 ?column? 
----------
 hello
(1 row)

CREATE TABLE test(id SERIAL);
INSERT INTO test(id) VALUES (1);
NOTICE:  Custom executor is being executed in C! Ahah!
NOTICE:  Calling C++ executor from C...
NOTICE:  Successfully created MLIR context!
NOTICE:  LLVM version: 20.1.2
NOTICE:  Inside C++ executor! Plan type: 3
NOTICE:  Query text: INSERT INTO test(id) VALUES (1);
NOTICE:  Not a SELECT statement, skipping
SELECT * FROM test;
NOTICE:  Custom executor is being executed in C! Ahah!
NOTICE:  Calling C++ executor from C...
NOTICE:  Successfully created MLIR context!
NOTICE:  LLVM version: 20.1.2
NOTICE:  Inside C++ executor! Plan type: 1
NOTICE:  Query text: SELECT * FROM test;
NOTICE:  Generated MLIR program for PostgreSQL table scan:
NOTICE:  MLIR: module {
  func.func private @open_postgres_table(i64) -> i64
  func.func private @read_next_tuple_from_table(i64) -> i64
  func.func private @close_postgres_table(i64)
  func.func @main() -> i64 {
    %c0_i64 = arith.constant 0 : i64
    %c-2_i64 = arith.constant -2 : i64
    %c137533370267545_i64 = arith.constant 137533370267545 : i64
    %0 = call @open_postgres_table(%c137533370267545_i64) : (i64) -> i64
    %1 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %2 = arith.cmpi eq, %1, %c-2_i64 : i64
    %3 = scf.if %2 -> (i64) {
      scf.yield %c0_i64 : i64
    } else {
      %301 = arith.addi %c0_i64, %1 : i64
      scf.yield %301 : i64
    }
    %4 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %5 = arith.cmpi eq, %4, %c-2_i64 : i64
    %6 = scf.if %5 -> (i64) {
      scf.yield %3 : i64
    } else {
      %301 = arith.addi %3, %4 : i64
      scf.yield %301 : i64
    }
    %7 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %8 = arith.cmpi eq, %7, %c-2_i64 : i64
    %9 = scf.if %8 -> (i64) {
      scf.yield %6 : i64
    } else {
      %301 = arith.addi %6, %7 : i64
      scf.yield %301 : i64
    }
    %10 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %11 = arith.cmpi eq, %10, %c-2_i64 : i64
    %12 = scf.if %11 -> (i64) {
      scf.yield %9 : i64
    } else {
      %301 = arith.addi %9, %10 : i64
      scf.yield %301 : i64
    }
    %13 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %14 = arith.cmpi eq, %13, %c-2_i64 : i64
    %15 = scf.if %14 -> (i64) {
      scf.yield %12 : i64
    } else {
      %301 = arith.addi %12, %13 : i64
      scf.yield %301 : i64
    }
    %16 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %17 = arith.cmpi eq, %16, %c-2_i64 : i64
    %18 = scf.if %17 -> (i64) {
      scf.yield %15 : i64
    } else {
      %301 = arith.addi %15, %16 : i64
      scf.yield %301 : i64
    }
    %19 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %20 = arith.cmpi eq, %19, %c-2_i64 : i64
    %21 = scf.if %20 -> (i64) {
      scf.yield %18 : i64
    } else {
      %301 = arith.addi %18, %19 : i64
      scf.yield %301 : i64
    }
    %22 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %23 = arith.cmpi eq, %22, %c-2_i64 : i64
    %24 = scf.if %23 -> (i64) {
      scf.yield %21 : i64
    } else {
      %301 = arith.addi %21, %22 : i64
      scf.yield %301 : i64
    }
    %25 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %26 = arith.cmpi eq, %25, %c-2_i64 : i64
    %27 = scf.if %26 -> (i64) {
      scf.yield %24 : i64
    } else {
      %301 = arith.addi %24, %25 : i64
      scf.yield %301 : i64
    }
    %28 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %29 = arith.cmpi eq, %28, %c-2_i64 : i64
    %30 = scf.if %29 -> (i64) {
      scf.yield %27 : i64
    } else {
      %301 = arith.addi %27, %28 : i64
      scf.yield %301 : i64
    }
    %31 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %32 = arith.cmpi eq, %31, %c-2_i64 : i64
    %33 = scf.if %32 -> (i64) {
      scf.yield %30 : i64
    } else {
      %301 = arith.addi %30, %31 : i64
      scf.yield %301 : i64
    }
    %34 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %35 = arith.cmpi eq, %34, %c-2_i64 : i64
    %36 = scf.if %35 -> (i64) {
      scf.yield %33 : i64
    } else {
      %301 = arith.addi %33, %34 : i64
      scf.yield %301 : i64
    }
    %37 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %38 = arith.cmpi eq, %37, %c-2_i64 : i64
    %39 = scf.if %38 -> (i64) {
      scf.yield %36 : i64
    } else {
      %301 = arith.addi %36, %37 : i64
      scf.yield %301 : i64
    }
    %40 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %41 = arith.cmpi eq, %40, %c-2_i64 : i64
    %42 = scf.if %41 -> (i64) {
      scf.yield %39 : i64
    } else {
      %301 = arith.addi %39, %40 : i64
      scf.yield %301 : i64
    }
    %43 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %44 = arith.cmpi eq, %43, %c-2_i64 : i64
    %45 = scf.if %44 -> (i64) {
      scf.yield %42 : i64
    } else {
      %301 = arith.addi %42, %43 : i64
      scf.yield %301 : i64
    }
    %46 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %47 = arith.cmpi eq, %46, %c-2_i64 : i64
    %48 = scf.if %47 -> (i64) {
      scf.yield %45 : i64
    } else {
      %301 = arith.addi %45, %46 : i64
      scf.yield %301 : i64
    }
    %49 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %50 = arith.cmpi eq, %49, %c-2_i64 : i64
    %51 = scf.if %50 -> (i64) {
      scf.yield %48 : i64
    } else {
      %301 = arith.addi %48, %49 : i64
      scf.yield %301 : i64
    }
    %52 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %53 = arith.cmpi eq, %52, %c-2_i64 : i64
    %54 = scf.if %53 -> (i64) {
      scf.yield %51 : i64
    } else {
      %301 = arith.addi %51, %52 : i64
      scf.yield %301 : i64
    }
    %55 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %56 = arith.cmpi eq, %55, %c-2_i64 : i64
    %57 = scf.if %56 -> (i64) {
      scf.yield %54 : i64
    } else {
      %301 = arith.addi %54, %55 : i64
      scf.yield %301 : i64
    }
    %58 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %59 = arith.cmpi eq, %58, %c-2_i64 : i64
    %60 = scf.if %59 -> (i64) {
      scf.yield %57 : i64
    } else {
      %301 = arith.addi %57, %58 : i64
      scf.yield %301 : i64
    }
    %61 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %62 = arith.cmpi eq, %61, %c-2_i64 : i64
    %63 = scf.if %62 -> (i64) {
      scf.yield %60 : i64
    } else {
      %301 = arith.addi %60, %61 : i64
      scf.yield %301 : i64
    }
    %64 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %65 = arith.cmpi eq, %64, %c-2_i64 : i64
    %66 = scf.if %65 -> (i64) {
      scf.yield %63 : i64
    } else {
      %301 = arith.addi %63, %64 : i64
      scf.yield %301 : i64
    }
    %67 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %68 = arith.cmpi eq, %67, %c-2_i64 : i64
    %69 = scf.if %68 -> (i64) {
      scf.yield %66 : i64
    } else {
      %301 = arith.addi %66, %67 : i64
      scf.yield %301 : i64
    }
    %70 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %71 = arith.cmpi eq, %70, %c-2_i64 : i64
    %72 = scf.if %71 -> (i64) {
      scf.yield %69 : i64
    } else {
      %301 = arith.addi %69, %70 : i64
      scf.yield %301 : i64
    }
    %73 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %74 = arith.cmpi eq, %73, %c-2_i64 : i64
    %75 = scf.if %74 -> (i64) {
      scf.yield %72 : i64
    } else {
      %301 = arith.addi %72, %73 : i64
      scf.yield %301 : i64
    }
    %76 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %77 = arith.cmpi eq, %76, %c-2_i64 : i64
    %78 = scf.if %77 -> (i64) {
      scf.yield %75 : i64
    } else {
      %301 = arith.addi %75, %76 : i64
      scf.yield %301 : i64
    }
    %79 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %80 = arith.cmpi eq, %79, %c-2_i64 : i64
    %81 = scf.if %80 -> (i64) {
      scf.yield %78 : i64
    } else {
      %301 = arith.addi %78, %79 : i64
      scf.yield %301 : i64
    }
    %82 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %83 = arith.cmpi eq, %82, %c-2_i64 : i64
    %84 = scf.if %83 -> (i64) {
      scf.yield %81 : i64
    } else {
      %301 = arith.addi %81, %82 : i64
      scf.yield %301 : i64
    }
    %85 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %86 = arith.cmpi eq, %85, %c-2_i64 : i64
    %87 = scf.if %86 -> (i64) {
      scf.yield %84 : i64
    } else {
      %301 = arith.addi %84, %85 : i64
      scf.yield %301 : i64
    }
    %88 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %89 = arith.cmpi eq, %88, %c-2_i64 : i64
    %90 = scf.if %89 -> (i64) {
      scf.yield %87 : i64
    } else {
      %301 = arith.addi %87, %88 : i64
      scf.yield %301 : i64
    }
    %91 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %92 = arith.cmpi eq, %91, %c-2_i64 : i64
    %93 = scf.if %92 -> (i64) {
      scf.yield %90 : i64
    } else {
      %301 = arith.addi %90, %91 : i64
      scf.yield %301 : i64
    }
    %94 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %95 = arith.cmpi eq, %94, %c-2_i64 : i64
    %96 = scf.if %95 -> (i64) {
      scf.yield %93 : i64
    } else {
      %301 = arith.addi %93, %94 : i64
      scf.yield %301 : i64
    }
    %97 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %98 = arith.cmpi eq, %97, %c-2_i64 : i64
    %99 = scf.if %98 -> (i64) {
      scf.yield %96 : i64
    } else {
      %301 = arith.addi %96, %97 : i64
      scf.yield %301 : i64
    }
    %100 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %101 = arith.cmpi eq, %100, %c-2_i64 : i64
    %102 = scf.if %101 -> (i64) {
      scf.yield %99 : i64
    } else {
      %301 = arith.addi %99, %100 : i64
      scf.yield %301 : i64
    }
    %103 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %104 = arith.cmpi eq, %103, %c-2_i64 : i64
    %105 = scf.if %104 -> (i64) {
      scf.yield %102 : i64
    } else {
      %301 = arith.addi %102, %103 : i64
      scf.yield %301 : i64
    }
    %106 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %107 = arith.cmpi eq, %106, %c-2_i64 : i64
    %108 = scf.if %107 -> (i64) {
      scf.yield %105 : i64
    } else {
      %301 = arith.addi %105, %106 : i64
      scf.yield %301 : i64
    }
    %109 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %110 = arith.cmpi eq, %109, %c-2_i64 : i64
    %111 = scf.if %110 -> (i64) {
      scf.yield %108 : i64
    } else {
      %301 = arith.addi %108, %109 : i64
      scf.yield %301 : i64
    }
    %112 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %113 = arith.cmpi eq, %112, %c-2_i64 : i64
    %114 = scf.if %113 -> (i64) {
      scf.yield %111 : i64
    } else {
      %301 = arith.addi %111, %112 : i64
      scf.yield %301 : i64
    }
    %115 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %116 = arith.cmpi eq, %115, %c-2_i64 : i64
    %117 = scf.if %116 -> (i64) {
      scf.yield %114 : i64
    } else {
      %301 = arith.addi %114, %115 : i64
      scf.yield %301 : i64
    }
    %118 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %119 = arith.cmpi eq, %118, %c-2_i64 : i64
    %120 = scf.if %119 -> (i64) {
      scf.yield %117 : i64
    } else {
      %301 = arith.addi %117, %118 : i64
      scf.yield %301 : i64
    }
    %121 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %122 = arith.cmpi eq, %121, %c-2_i64 : i64
    %123 = scf.if %122 -> (i64) {
      scf.yield %120 : i64
    } else {
      %301 = arith.addi %120, %121 : i64
      scf.yield %301 : i64
    }
    %124 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %125 = arith.cmpi eq, %124, %c-2_i64 : i64
    %126 = scf.if %125 -> (i64) {
      scf.yield %123 : i64
    } else {
      %301 = arith.addi %123, %124 : i64
      scf.yield %301 : i64
    }
    %127 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %128 = arith.cmpi eq, %127, %c-2_i64 : i64
    %129 = scf.if %128 -> (i64) {
      scf.yield %126 : i64
    } else {
      %301 = arith.addi %126, %127 : i64
      scf.yield %301 : i64
    }
    %130 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %131 = arith.cmpi eq, %130, %c-2_i64 : i64
    %132 = scf.if %131 -> (i64) {
      scf.yield %129 : i64
    } else {
      %301 = arith.addi %129, %130 : i64
      scf.yield %301 : i64
    }
    %133 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %134 = arith.cmpi eq, %133, %c-2_i64 : i64
    %135 = scf.if %134 -> (i64) {
      scf.yield %132 : i64
    } else {
      %301 = arith.addi %132, %133 : i64
      scf.yield %301 : i64
    }
    %136 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %137 = arith.cmpi eq, %136, %c-2_i64 : i64
    %138 = scf.if %137 -> (i64) {
      scf.yield %135 : i64
    } else {
      %301 = arith.addi %135, %136 : i64
      scf.yield %301 : i64
    }
    %139 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %140 = arith.cmpi eq, %139, %c-2_i64 : i64
    %141 = scf.if %140 -> (i64) {
      scf.yield %138 : i64
    } else {
      %301 = arith.addi %138, %139 : i64
      scf.yield %301 : i64
    }
    %142 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %143 = arith.cmpi eq, %142, %c-2_i64 : i64
    %144 = scf.if %143 -> (i64) {
      scf.yield %141 : i64
    } else {
      %301 = arith.addi %141, %142 : i64
      scf.yield %301 : i64
    }
    %145 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %146 = arith.cmpi eq, %145, %c-2_i64 : i64
    %147 = scf.if %146 -> (i64) {
      scf.yield %144 : i64
    } else {
      %301 = arith.addi %144, %145 : i64
      scf.yield %301 : i64
    }
    %148 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %149 = arith.cmpi eq, %148, %c-2_i64 : i64
    %150 = scf.if %149 -> (i64) {
      scf.yield %147 : i64
    } else {
      %301 = arith.addi %147, %148 : i64
      scf.yield %301 : i64
    }
    %151 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %152 = arith.cmpi eq, %151, %c-2_i64 : i64
    %153 = scf.if %152 -> (i64) {
      scf.yield %150 : i64
    } else {
      %301 = arith.addi %150, %151 : i64
      scf.yield %301 : i64
    }
    %154 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %155 = arith.cmpi eq, %154, %c-2_i64 : i64
    %156 = scf.if %155 -> (i64) {
      scf.yield %153 : i64
    } else {
      %301 = arith.addi %153, %154 : i64
      scf.yield %301 : i64
    }
    %157 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %158 = arith.cmpi eq, %157, %c-2_i64 : i64
    %159 = scf.if %158 -> (i64) {
      scf.yield %156 : i64
    } else {
      %301 = arith.addi %156, %157 : i64
      scf.yield %301 : i64
    }
    %160 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %161 = arith.cmpi eq, %160, %c-2_i64 : i64
    %162 = scf.if %161 -> (i64) {
      scf.yield %159 : i64
    } else {
      %301 = arith.addi %159, %160 : i64
      scf.yield %301 : i64
    }
    %163 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %164 = arith.cmpi eq, %163, %c-2_i64 : i64
    %165 = scf.if %164 -> (i64) {
      scf.yield %162 : i64
    } else {
      %301 = arith.addi %162, %163 : i64
      scf.yield %301 : i64
    }
    %166 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %167 = arith.cmpi eq, %166, %c-2_i64 : i64
    %168 = scf.if %167 -> (i64) {
      scf.yield %165 : i64
    } else {
      %301 = arith.addi %165, %166 : i64
      scf.yield %301 : i64
    }
    %169 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %170 = arith.cmpi eq, %169, %c-2_i64 : i64
    %171 = scf.if %170 -> (i64) {
      scf.yield %168 : i64
    } else {
      %301 = arith.addi %168, %169 : i64
      scf.yield %301 : i64
    }
    %172 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %173 = arith.cmpi eq, %172, %c-2_i64 : i64
    %174 = scf.if %173 -> (i64) {
      scf.yield %171 : i64
    } else {
      %301 = arith.addi %171, %172 : i64
      scf.yield %301 : i64
    }
    %175 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %176 = arith.cmpi eq, %175, %c-2_i64 : i64
    %177 = scf.if %176 -> (i64) {
      scf.yield %174 : i64
    } else {
      %301 = arith.addi %174, %175 : i64
      scf.yield %301 : i64
    }
    %178 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %179 = arith.cmpi eq, %178, %c-2_i64 : i64
    %180 = scf.if %179 -> (i64) {
      scf.yield %177 : i64
    } else {
      %301 = arith.addi %177, %178 : i64
      scf.yield %301 : i64
    }
    %181 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %182 = arith.cmpi eq, %181, %c-2_i64 : i64
    %183 = scf.if %182 -> (i64) {
      scf.yield %180 : i64
    } else {
      %301 = arith.addi %180, %181 : i64
      scf.yield %301 : i64
    }
    %184 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %185 = arith.cmpi eq, %184, %c-2_i64 : i64
    %186 = scf.if %185 -> (i64) {
      scf.yield %183 : i64
    } else {
      %301 = arith.addi %183, %184 : i64
      scf.yield %301 : i64
    }
    %187 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %188 = arith.cmpi eq, %187, %c-2_i64 : i64
    %189 = scf.if %188 -> (i64) {
      scf.yield %186 : i64
    } else {
      %301 = arith.addi %186, %187 : i64
      scf.yield %301 : i64
    }
    %190 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %191 = arith.cmpi eq, %190, %c-2_i64 : i64
    %192 = scf.if %191 -> (i64) {
      scf.yield %189 : i64
    } else {
      %301 = arith.addi %189, %190 : i64
      scf.yield %301 : i64
    }
    %193 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %194 = arith.cmpi eq, %193, %c-2_i64 : i64
    %195 = scf.if %194 -> (i64) {
      scf.yield %192 : i64
    } else {
      %301 = arith.addi %192, %193 : i64
      scf.yield %301 : i64
    }
    %196 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %197 = arith.cmpi eq, %196, %c-2_i64 : i64
    %198 = scf.if %197 -> (i64) {
      scf.yield %195 : i64
    } else {
      %301 = arith.addi %195, %196 : i64
      scf.yield %301 : i64
    }
    %199 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %200 = arith.cmpi eq, %199, %c-2_i64 : i64
    %201 = scf.if %200 -> (i64) {
      scf.yield %198 : i64
    } else {
      %301 = arith.addi %198, %199 : i64
      scf.yield %301 : i64
    }
    %202 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %203 = arith.cmpi eq, %202, %c-2_i64 : i64
    %204 = scf.if %203 -> (i64) {
      scf.yield %201 : i64
    } else {
      %301 = arith.addi %201, %202 : i64
      scf.yield %301 : i64
    }
    %205 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %206 = arith.cmpi eq, %205, %c-2_i64 : i64
    %207 = scf.if %206 -> (i64) {
      scf.yield %204 : i64
    } else {
      %301 = arith.addi %204, %205 : i64
      scf.yield %301 : i64
    }
    %208 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %209 = arith.cmpi eq, %208, %c-2_i64 : i64
    %210 = scf.if %209 -> (i64) {
      scf.yield %207 : i64
    } else {
      %301 = arith.addi %207, %208 : i64
      scf.yield %301 : i64
    }
    %211 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %212 = arith.cmpi eq, %211, %c-2_i64 : i64
    %213 = scf.if %212 -> (i64) {
      scf.yield %210 : i64
    } else {
      %301 = arith.addi %210, %211 : i64
      scf.yield %301 : i64
    }
    %214 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %215 = arith.cmpi eq, %214, %c-2_i64 : i64
    %216 = scf.if %215 -> (i64) {
      scf.yield %213 : i64
    } else {
      %301 = arith.addi %213, %214 : i64
      scf.yield %301 : i64
    }
    %217 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %218 = arith.cmpi eq, %217, %c-2_i64 : i64
    %219 = scf.if %218 -> (i64) {
      scf.yield %216 : i64
    } else {
      %301 = arith.addi %216, %217 : i64
      scf.yield %301 : i64
    }
    %220 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %221 = arith.cmpi eq, %220, %c-2_i64 : i64
    %222 = scf.if %221 -> (i64) {
      scf.yield %219 : i64
    } else {
      %301 = arith.addi %219, %220 : i64
      scf.yield %301 : i64
    }
    %223 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %224 = arith.cmpi eq, %223, %c-2_i64 : i64
    %225 = scf.if %224 -> (i64) {
      scf.yield %222 : i64
    } else {
      %301 = arith.addi %222, %223 : i64
      scf.yield %301 : i64
    }
    %226 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %227 = arith.cmpi eq, %226, %c-2_i64 : i64
    %228 = scf.if %227 -> (i64) {
      scf.yield %225 : i64
    } else {
      %301 = arith.addi %225, %226 : i64
      scf.yield %301 : i64
    }
    %229 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %230 = arith.cmpi eq, %229, %c-2_i64 : i64
    %231 = scf.if %230 -> (i64) {
      scf.yield %228 : i64
    } else {
      %301 = arith.addi %228, %229 : i64
      scf.yield %301 : i64
    }
    %232 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %233 = arith.cmpi eq, %232, %c-2_i64 : i64
    %234 = scf.if %233 -> (i64) {
      scf.yield %231 : i64
    } else {
      %301 = arith.addi %231, %232 : i64
      scf.yield %301 : i64
    }
    %235 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %236 = arith.cmpi eq, %235, %c-2_i64 : i64
    %237 = scf.if %236 -> (i64) {
      scf.yield %234 : i64
    } else {
      %301 = arith.addi %234, %235 : i64
      scf.yield %301 : i64
    }
    %238 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %239 = arith.cmpi eq, %238, %c-2_i64 : i64
    %240 = scf.if %239 -> (i64) {
      scf.yield %237 : i64
    } else {
      %301 = arith.addi %237, %238 : i64
      scf.yield %301 : i64
    }
    %241 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %242 = arith.cmpi eq, %241, %c-2_i64 : i64
    %243 = scf.if %242 -> (i64) {
      scf.yield %240 : i64
    } else {
      %301 = arith.addi %240, %241 : i64
      scf.yield %301 : i64
    }
    %244 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %245 = arith.cmpi eq, %244, %c-2_i64 : i64
    %246 = scf.if %245 -> (i64) {
      scf.yield %243 : i64
    } else {
      %301 = arith.addi %243, %244 : i64
      scf.yield %301 : i64
    }
    %247 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %248 = arith.cmpi eq, %247, %c-2_i64 : i64
    %249 = scf.if %248 -> (i64) {
      scf.yield %246 : i64
    } else {
      %301 = arith.addi %246, %247 : i64
      scf.yield %301 : i64
    }
    %250 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %251 = arith.cmpi eq, %250, %c-2_i64 : i64
    %252 = scf.if %251 -> (i64) {
      scf.yield %249 : i64
    } else {
      %301 = arith.addi %249, %250 : i64
      scf.yield %301 : i64
    }
    %253 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %254 = arith.cmpi eq, %253, %c-2_i64 : i64
    %255 = scf.if %254 -> (i64) {
      scf.yield %252 : i64
    } else {
      %301 = arith.addi %252, %253 : i64
      scf.yield %301 : i64
    }
    %256 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %257 = arith.cmpi eq, %256, %c-2_i64 : i64
    %258 = scf.if %257 -> (i64) {
      scf.yield %255 : i64
    } else {
      %301 = arith.addi %255, %256 : i64
      scf.yield %301 : i64
    }
    %259 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %260 = arith.cmpi eq, %259, %c-2_i64 : i64
    %261 = scf.if %260 -> (i64) {
      scf.yield %258 : i64
    } else {
      %301 = arith.addi %258, %259 : i64
      scf.yield %301 : i64
    }
    %262 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %263 = arith.cmpi eq, %262, %c-2_i64 : i64
    %264 = scf.if %263 -> (i64) {
      scf.yield %261 : i64
    } else {
      %301 = arith.addi %261, %262 : i64
      scf.yield %301 : i64
    }
    %265 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %266 = arith.cmpi eq, %265, %c-2_i64 : i64
    %267 = scf.if %266 -> (i64) {
      scf.yield %264 : i64
    } else {
      %301 = arith.addi %264, %265 : i64
      scf.yield %301 : i64
    }
    %268 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %269 = arith.cmpi eq, %268, %c-2_i64 : i64
    %270 = scf.if %269 -> (i64) {
      scf.yield %267 : i64
    } else {
      %301 = arith.addi %267, %268 : i64
      scf.yield %301 : i64
    }
    %271 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %272 = arith.cmpi eq, %271, %c-2_i64 : i64
    %273 = scf.if %272 -> (i64) {
      scf.yield %270 : i64
    } else {
      %301 = arith.addi %270, %271 : i64
      scf.yield %301 : i64
    }
    %274 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %275 = arith.cmpi eq, %274, %c-2_i64 : i64
    %276 = scf.if %275 -> (i64) {
      scf.yield %273 : i64
    } else {
      %301 = arith.addi %273, %274 : i64
      scf.yield %301 : i64
    }
    %277 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %278 = arith.cmpi eq, %277, %c-2_i64 : i64
    %279 = scf.if %278 -> (i64) {
      scf.yield %276 : i64
    } else {
      %301 = arith.addi %276, %277 : i64
      scf.yield %301 : i64
    }
    %280 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %281 = arith.cmpi eq, %280, %c-2_i64 : i64
    %282 = scf.if %281 -> (i64) {
      scf.yield %279 : i64
    } else {
      %301 = arith.addi %279, %280 : i64
      scf.yield %301 : i64
    }
    %283 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %284 = arith.cmpi eq, %283, %c-2_i64 : i64
    %285 = scf.if %284 -> (i64) {
      scf.yield %282 : i64
    } else {
      %301 = arith.addi %282, %283 : i64
      scf.yield %301 : i64
    }
    %286 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %287 = arith.cmpi eq, %286, %c-2_i64 : i64
    %288 = scf.if %287 -> (i64) {
      scf.yield %285 : i64
    } else {
      %301 = arith.addi %285, %286 : i64
      scf.yield %301 : i64
    }
    %289 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %290 = arith.cmpi eq, %289, %c-2_i64 : i64
    %291 = scf.if %290 -> (i64) {
      scf.yield %288 : i64
    } else {
      %301 = arith.addi %288, %289 : i64
      scf.yield %301 : i64
    }
    %292 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %293 = arith.cmpi eq, %292, %c-2_i64 : i64
    %294 = scf.if %293 -> (i64) {
      scf.yield %291 : i64
    } else {
      %301 = arith.addi %291, %292 : i64
      scf.yield %301 : i64
    }
    %295 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %296 = arith.cmpi eq, %295, %c-2_i64 : i64
    %297 = scf.if %296 -> (i64) {
      scf.yield %294 : i64
    } else {
      %301 = arith.addi %294, %295 : i64
      scf.yield %301 : i64
    }
    %298 = call @read_next_tuple_from_table(%0) : (i64) -> i64
    %299 = arith.cmpi eq, %298, %c-2_i64 : i64
    %300 = scf.if %299 -> (i64) {
      scf.yield %297 : i64
    } else {
      %301 = arith.addi %297, %298 : i64
      scf.yield %301 : i64
    }
    call @close_postgres_table(%0) : (i64) -> ()
    return %300 : i64
  }
}

NOTICE:  Lowered PostgreSQL table scan MLIR to LLVM dialect!
NOTICE:  Created MLIR ExecutionEngine for PostgreSQL table scan!
NOTICE:  Invoked MLIR JIT PostgreSQL table scanner!
NOTICE:  PostgreSQL table scan completed with sum: 1
 id 
----
  1
(1 row)

